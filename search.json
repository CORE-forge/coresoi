[{"path":[]},{"path":"https://core-forge.github.io/coresoi/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://core-forge.github.io/coresoi/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://core-forge.github.io/coresoi/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://core-forge.github.io/coresoi/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://core-forge.github.io/coresoi/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement Niccolò Salvini. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://core-forge.github.io/coresoi/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://core-forge.github.io/coresoi/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://core-forge.github.io/coresoi/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://core-forge.github.io/coresoi/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://core-forge.github.io/coresoi/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://core-forge.github.io/coresoi/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://core-forge.github.io/coresoi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 coresoi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/articles/CompositeIndicator.html","id":"normalisation-methods","dir":"Articles","previous_headings":"","what":"Normalisation methods","title":"Composite Indicator (CI)","text":"Normalisation required order make indicators comparable different measurement units particularly skew distribution. addition, according aggregation method used, also required indicators different polarity. regard, common normalise indicators negatively correlated latent phenomenon measured (negative ‘polarity’) become positively correlated latent phenomenon (positive ‘polarity’). way, larger values normalised indicator result larger values CI. various normalisation methods, ranking, standardisation (z-scores), re-scaling (min-max transformation), indexing (index number transformation ‘distance’ reference), categorisation. complete review thorough discussion possible normalisation methods provided OECD (2008) Otoiu et al. (2021) . provide two relevant application, many red flags binary. Let q-th simple indicator, q = 1, …, Q, c-th unit, c = 1, …, C; Q overall number simple indicators C overall number units. Standardisation (z-scores): indicator, difference original values mean units divided standard deviation. way, indicators common scale mean 0 standard deviation 1. indicator negative polarity, standardized values can multiplied -1. \\[ \\begin{equation} I_{qc} = \\frac{x_{qc}-\\mu_q(x_{qc})}{\\sigma_q(x_{qc})} \\end{equation} \\] Rescaling (Min-Max transformation). difference original values minimum divided range indicator. Transformed indicators common scale ranging 0 1. Therefore, transformation applied non-binary red flags. indicator negative polarity, complement rescaled values respect 1 can calculated. \\[ \\begin{equation} I_{qc} = \\frac{x_{qc} - min_c(x_{qc})}{max_c(x_{qc})- min_c(x_{qc})} \\end{equation} \\] Standardisation rescaling applicable indicators positive, negative zero values, sensitive outliers. Standardisation provides indicators equal variances, suitable bounded indicators produces negative values, rescaling provides indicators equal range, suitable unbounded indicators.","code":""},{"path":"https://core-forge.github.io/coresoi/articles/CompositeIndicator.html","id":"weighting-and-aggregation-schemes","dir":"Articles","previous_headings":"","what":"Weighting and aggregation schemes","title":"Composite Indicator (CI)","text":"order obtain single CI set individual indicators, two important choices stake: weighting system aggregation scheme. former implies scale importance individual indicator, latter identifies technique (compensatory, partially compensatory non-compensatory) summarising individual indicator values single number. Weights reflect relative importance individual indicators heavily influence outcomes CI. widely used techniques weighting individual indicators following (Otoiu et al. 2021): ) weighting, implies equal weights applied individual indicators; b) subjective expert weighting, group specialists define weights indicator; c) objective ‘data-driven’ weighting, coefficients first factor Principal Component Analysis used weights (set weights explains largest variation original indicators). choice weighting system usually far influential among others final CI value related rankings (Gnaldi Ranalli 2015a). choice aggregation scheme, hand, heavily depends degree compensability substitutability individual indicators. compensatory approach involves use linear functions, linear combination normalised individual indicators, whereas partially compensatory non-compensatory approach requires use non-linear functions, multiplicative approach. first case, CI unit c can obtained follows, \\[ \\begin{equation} C_I = \\sum_{q=1}^{Q} w_q I_{qc} \\end{equation} \\] \\(0 \\leq w_q \\leq 1\\) weight given indicator \\(q\\), \\(\\begin{equation} C_I = \\sum_{q=1}^{Q} w_q = 1 \\end{equation}\\). using geometric aggregation rule, \\[ \\begin{equation} C_{I_c}=\\prod_{q=1}^{Q} I_{q_c}^{w_q} \\end{equation} \\] partial compensability allowed. choice advisable case, , conservative perspective, even small achievement red flags crucial overall risk corruption. additive multiplicative aggregation functions can seen special cases generalised mean power mean order r, arithmetic mean geometric mean. Alternative aggregation methods , among others, Wroclaw Taxonomic Method, Mean-Min Function, Mazziotta-Pareto Index (details see Otoiu et al., 2021).","code":""},{"path":"https://core-forge.github.io/coresoi/articles/CompositeIndicator.html","id":"multivariate-analysis-for-the-study-of-the-data-structure","dir":"Articles","previous_headings":"","what":"Multivariate analysis for the study of the data structure","title":"Composite Indicator (CI)","text":"broadly known corruption corruption risk complex latent phenomenon red flag indicators, obtained particular context, consist observable manifestation . building CI corruption risk, set available red flags transformed unique measure phenomenon contribute measure. , however, phenomenon considered unidimensional, assumed single red flag expression unique underlying construct (corruption). hand, might reasonable suppose existence several dimensions groups red flag indicators, measure, different perspectives, several aspects (multidimensional) phenomenon. reason, dimensionality assessment crucial process construction every CI, aim discovering whether phenomenon issue considered unidimensional multidimensional. end, multivariate statistical techniques available acknowledging multidimensionality latent phenomenon, especially choosing number composition (terms observable indicators) sub-dimensions accounted . regard, methods can confirmatory exploratory nature. former type requires priori specification dimensionality structure – .e., dimensions characterise phenomenon indicators contribute measure one – allows us assess goodness fit solution data hand. However, difficult prior information dimensionality structure , consequently, trivial specify practice. Conversely, latter kind methods assume particular dimensionality structure perform exploratory analysis possible dimensionality solutions, proposing better fit data hand. selection final solution can carried means objective (statistical) /subjective criteria. mentioned , dimensionality evaluation fundamental step building CI. helps consider suitability data issue representing latent phenomenon study contribute understand implications methodological choices (e.g., related weighting, aggregation, etc.) entire process composite indicator construction. fact, individual indicators often chosen arbitrarily, paying little attention relationship among leading “indicator rich information poor” environment, , composites contribute add knowledge, conversely overwhelmed, confused misleading (OECD, 2008).","code":""},{"path":"https://core-forge.github.io/coresoi/articles/CompositeIndicator.html","id":"principal-component-analysis","dir":"Articles","previous_headings":"Multivariate analysis for the study of the data structure","what":"Principal Component Analysis","title":"Composite Indicator (CI)","text":"Principal Component Analysis .e. PCA (Abdi Williams 2010) one widely known method multivariate statistical analysis. Given set Q variables (indicators), x1, …, xQ, purpose find linear combinations (.e, principal components, PC) order explain variance much possible. fact, even Q variables, variability may accounted small number , say R. idea behind approach single principal component measuring different dimension data include indicators mostly contribute measurement, hence high degree correlation among . principal components, denoted Pr, therefore estimated combining (linearly) observed Q variables uncorrelated . Theoretically, given Q variables, possible find many principal components, , \\[ \\begin{equation} P_1=\\alpha_{Q1}x_1+\\alpha_{Q2}x_2+...+\\alpha_{QQ}x_Q \\end{equation} \\] \\(\\alpha_{rq}\\) weights (also called component factor loadings) related variable \\(x_q\\) component \\(P_r\\), \\(r,q = 1,…,Q\\), principal components uncorrelated contribute explain decreasing share overall variability \\(x\\), , first \\(PC (r = 1)\\) accounts maximum possible proportion variance observed variables, second \\(PC (r = 2)\\) accounts maximum remaining variance, . objective therefore select first \\(R << Q\\) principal components order explain high amount variance observed data. Principal components extracted computing eigenvalues \\(Q x Q\\) covariance matrix computed observed variables. eigenvalues correspond variances principal components theory \\(Q\\) eigenvalues can computed (many variables), can negligible. Moreover, sum eigenvalues equal sum variances indicators, ratio eigenvalue sum proportion variance one contributes explain. Consequently, order select number components retain (.e., R), analysis eigenvalue decomposition covariance matrix needed. practice, common consider predefined share total variance explained (e.g., 70% 80%), R equal number eigenvalues contribute explain part variance. However, two three PCs often selected order graphical representation resulting solution.","code":""},{"path":"https://core-forge.github.io/coresoi/articles/CompositeIndicator.html","id":"factor-analysis","dir":"Articles","previous_headings":"Multivariate analysis for the study of the data structure","what":"factor analysis","title":"Composite Indicator (CI)","text":"Like PCA, Factor Analysis (FA; McDonald, 2014) aims finding reduced number unobserved variables (.e., latent factors) observed pool \\(Q\\) indicators, say \\(x1, …, xQ\\), order underline relationships among . Differently PCA, FA based statistical model, data variance can decomposed two parts, explained factors still unexplained. Hence, given set Q variables (indicators) R factors, FA considers following model: \\[ \\begin{equation} x_1=\\gamma_{Q1}F_1+\\gamma_{Q2}F_2+...+\\gamma_{QR}F_R+\\epsilon_q \\end{equation} \\] \\(\\gamma_{qr}\\) represents factor loading indicator q factor r, Fr common factor, r = 1,…,R, \\(\\epsilon_q\\) unique factor, \\(q = 1,…,Q\\), corresponds error term regression model, zero mean, independent identically distributed respect variable. Factor loadings summarise relationships indicator factor can seen standardised regression coefficients, ranging -1 1. Several approaches available extracting factors, PCA, maximum likelihood, centroid method, principal axis method, etc. However, crucial issue many factors retain different methods proposed regard, based eigenvalue decomposition covariance matrix among indicators. Kaiser criterion suggests dropping factors eigenvalues 1 supposed contribution variance explained negligible. Moreover, like PCA, one can decide set predetermined desired share explained variance (e.g., 80%) retain number factors allows . Alternatively, another proposal inspect scree plot, , plot successive eigenvalues look drops sharply becomes flat, also known elbow method (Syakur et al. 2018). proposals select number factors , example, Joliffe criterion parallel analysis, important remark , despite solution optimal one according , say, objective criteria, lead results difficult interpretability comprehension. reason, together indices closely related statistical/objective criteria, degree subjectivity adopted. number factors selected, good practice perform rotation factor loadings reasons interpretability resulting solution. ideal simple solution reached, , clear pattern loadings indicator one high value one factor, near-zero values others, indicator associated one one factor. Several rotation methods exist can divided two groups, based orthogonality (uncorrelation) among factors (varimax, quartimax equimax), relaxing orthogonality constraint, -called oblique rotation methods (oblimin promax).","code":""},{"path":"https://core-forge.github.io/coresoi/articles/CompositeIndicator.html","id":"item-response-theory","dir":"Articles","previous_headings":"Multivariate analysis for the study of the data structure","what":"item response theory","title":"Composite Indicator (CI)","text":"Item Response Theory (IRT) models (see Bartolucci, Dardanoni, Peracchi (2015) outline) can considered one well-known latent variable models. work categorical indicators based latent variables, also called latent traits, represent latent phenomenon study (.e., corruption risk case). IRT models allow us mathematically specify probability observing value indicator monotonic non-decreasing function indicator characteristics (difficulty, discrimination, etc.) latent trait level, namely Item Characteristic Curve (ICC). famous IRT model Rasch model (Rasch, 1961), especially used educational field, indicators issue (e.g., items assessment test) dichotomous (1 = correct, 0 = wrong response). Rasch model following ICC: \\[ \\begin{equation} P\\left(x_{cq}=1\\mid \\theta_c\\right)=\\frac{\\exp\\left(\\theta_c -\\beta_q \\right)}{1+\\exp\\left(\\theta_c-\\beta_q\\right)} \\end{equation} \\] \\(x_{}cq\\) denotes indicator \\(q\\) unit \\(\\theta_c\\), latent trait level unit c \\(\\beta_q\\) difficulty parameter item \\(q\\), \\(c = 1,…,C\\) \\(q = 1,…,Q\\). latter parameter defines location ICC latent trait space can interpreted latent trait level needed 50% probability. Rasch model also known 1PL (one-parameter logistic) model, considers \\(\\). logistic function defining probability defined left-hand side ii. one parameter right-hand side. fact, assumes item (indicator) discrimination power, , capacity item differentiate units different latent trait levels. relax constraint, 2PL (two-parameter logistic) model (Birnbaum, 1968): \\[ \\begin{equation} P\\left(x_{cq}=1\\mid \\theta_c\\right)=\\frac{\\exp\\left[\\gamma_q\\left(\\theta_c -\\beta_q\\right)\\right]}{1+\\exp\\left[\\gamma_q\\left(\\theta_c-\\beta_q\\right)\\right]} \\end{equation} \\] \\(\\gamma_q\\) discriminating parameters, defines slope ICC. IRT models can specified according type indicators (dichotomous polytomous), number parameters used defining ICC (one, two, three, etc.), distribution latent variable (discrete continuous), link function (.e., function connects parameters – right hand side equations – conditional probability observing value indicator – left hand side). IRT models initially defined modelling unidimensional phenomena, represented univariate random (latent) variable, namely . However, multidimensional IRT models proposed (Reckase, 2009), latent variable multivariate, hence random vector, component represents dimension phenomenon issue. Like PCA FA, confirmatory exploratory approaches available also IRT framework.","code":""},{"path":"https://core-forge.github.io/coresoi/articles/CompositeIndicator.html","id":"structural-equation-modelling","dir":"Articles","previous_headings":"Multivariate analysis for the study of the data structure","what":"Structural Equation Modelling","title":"Composite Indicator (CI)","text":"Structural Equation Modelling .e. SEM (Raykov Marcoulides (2000) ; Nachtigall et al., 2003) flexible framework integrates several techniques multivariate statistical analysis. main purpose estimate presence magnitude relationships among variables using key features path analysis (Wright, 1934). example, let us consider three variables, \\(X\\), \\(Y\\) \\(Z\\), whose relationships can summarised reported Figure 1. can notice effect X Y two-fold: . direct effect \\(X\\) \\(Y\\) (represented direct path \\(X\\) \\(Y\\)), ii. indirect effect mediated Z (represented path \\(X\\) \\(Y\\) via \\(Z\\)). Hence, total effect \\(X\\) \\(Y\\) obtained summing two components path analysis techniques suitable estimating direct, indirect, total effects among variables. Moreover, \\(SEM\\) can deal latent variables, observed indicators overt manifestations. Therefore, two different stages modelling approaches available \\(SEM\\): . related measurement models (e.g., one supposed latent variables), specify relationship observed variables underlying latent one, ii. regarding connections among latent variables, defined structural models.  example rather simple \\(SEM\\) reported Figure 2, 7 indicators \\((X1,…,X7)\\) concur measure three latent variables \\((Z1, Z2, Z3)\\). situation need three measurement models handling relationships observed indicators three latent variables. Moreover, structural model specifies \\(Z1\\) \\(Z3\\) direct effect \\(Z2\\), also affect .  Several logical steps contribute define analysis strategy based SEM. first step model specification, specifies supposed relationships among variables (observed unobserved) according theory previous knowledge phenomenon study. fitting model, one check identification, order avoid -identified, since case impossible estimate model parameters. stage refers assessment quality/quantity observed indicators representing latent variables – see Rigdon (1995)]specific details. Afterwards, model fitted data hand evaluated using quantitative indices goodness fit, Root Mean Square Error Approximation, Comparative Fit Index, Bayesian Information Criterion, Akaike Information Criterion, etc. necessary, model can modified order improve model fitting, contextual repetition steps.","code":""},{"path":"https://core-forge.github.io/coresoi/articles/CompositeIndicator.html","id":"sensitivity-analysis","dir":"Articles","previous_headings":"Multivariate analysis for the study of the data structure","what":"Sensitivity analysis","title":"Composite Indicator (CI)","text":"selection individual indicators, choice normalisation method, weighting system, aggregation scheme potential sources uncertainty affect variance CIs variability ranking based CIs. words, expected choice include particular indicator CI, choice employ normalisation scheme (rather different one) can impact rankings individual units according CI. context, sensitivity analysis considered appropriate tool assess uncertainties studies variation output (CI values rankings) can apportioned different sources variation assumptions, given CI depends upon information fed . Sensitivity analysis can help gauge robustness CI value. particular, CI can computed using possible combinations alternative possible choices. unit, distribution possible Cis highlights whether unit systematically labeled corrupt particular circumstances. ANOVA /regression analysis can also conducted outcome sensitivity exercise evaluate factors involved construction CI relevant influential (Gnaldi Ranalli 2015b)","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/articles/coresoi.html","id":"compute-red-flags-ind_2","dir":"Articles","previous_headings":"","what":"Compute red flags ( ind_2 )","title":"How to calculate indicators with `coresoi`","text":"Let us say interested calculating indicator, say, number 2. need load data sample mock_data_core supply related variables function ind_2(). Check documentation function ind_2() get grasp .","code":"library(coresoi) data(\"mock_data_core\")  mock_data_core <- mock_data_core |>   tidyr::unnest(aggiudicatari, keep_empty = TRUE)  ind_2(   data = mock_data_core,   contract_value = importo_lotto,   publication_date = data_pubblicazione,   stat_unit = codice_fiscale,   test_type = \"wilcoxon\",   emergency_name = \"coronavirus\" ) |>   head(10) #> # A tibble: 10 × 11 #>    indicator_id indicator_name   indicator_value aggregation_id aggregation_name #>           <dbl> <chr>                      <dbl> <chr>          <chr>            #>  1            2 Awarded economi…           0     0000000000     MOUSAWAT         #>  2            2 Awarded economi…           1     00000000000    GO.MA. S.R.L.    #>  3            2 Awarded economi…           1     0000000000000… BDC LABORATORIES #>  4            2 Awarded economi…           0     00000000785    ADVANCED MEDICA… #>  5            2 Awarded economi…           0     00000004649    ADVANCED MEDICA… #>  6            2 Awarded economi…           0     00000149997    AGFA HEALTHCARE… #>  7            2 Awarded economi…           0     00000186762    UNIPHARMA        #>  8            2 Awarded economi…           0     00000646471    BIOCRATES LIFE … #>  9            2 Awarded economi…           0     00038730123    OMNIA PLASTICA … #> 10            2 Awarded economi…           0.994 00047510326    EUROSPITAL S.P.… #> # ℹ 6 more variables: emergency_name <chr>, emergency_id <int>, #> #   country_id <dbl>, country_name <chr>, indicator_last_update <dttm>, #> #   data_last_update <dttm>"},{"path":"https://core-forge.github.io/coresoi/articles/coresoi.html","id":"usage-tips","dir":"Articles","previous_headings":"","what":"Usage tips","title":"How to calculate indicators with `coresoi`","text":"compute red flags using package, start loading sample data (mock_data_core) provided package. Specify relevant variables red flag calculation calling relevant indicator function (e.g., ind_2()). Refer documentation indicator function understand required input variables expected output schema. output schema provides information regarding indicator name, indicator value, relevant geographic aggregation (), emergency context red flag calculated.","code":""},{"path":"https://core-forge.github.io/coresoi/articles/coresoi.html","id":"technical-support","dir":"Articles","previous_headings":"","what":"Technical support","title":"How to calculate indicators with `coresoi`","text":"users encounter issues using package, can refer documentation reach package maintainers via Github opening issue directly (Niccolò Salvini technical support). maintainers can assist questions regarding required input variables, resolving errors, understanding output schema red flag indicators.","code":""},{"path":"https://core-forge.github.io/coresoi/articles/tryCoresoiWithYourData.html","id":"integration-with-project-partner-data","dir":"Articles","previous_headings":"","what":"Integration with Project Partner Data","title":"Try `coresoi` with you own data","text":"beginning make sure correctly installed package coreosoi. compute indicator ind_1, need map function argument column project partner’s database. code snippet, load project partner’s data using read.csv function. call ind_1 function, passing data, publication_date, emergency_name, test_type, stat_unit arguments. map arguments columns project partner’s database, need ensure partner data column named stat_unit, companies win tenders, column named publication_date. order correctly map data (.e. columns emplyed calculations) data (.e. columns going pass indicators functions) please refer sample data documentation goes columns specs.","code":"library(coresoi)  # Load project partner data partner_data <- read.csv(\"path/to/partner/data.csv\")  # calculate the ind_1 indicator ind_1_result <- ind_1(data = partner_data,                        publication_date = <column_rooting_to_publication_date> ,                        emergency_name = \"Coronavirus\",                       test_type = \"fisher\",                       stat_unit = <column_rooting_to_company_winners> )"},{"path":"https://core-forge.github.io/coresoi/articles/tryCoresoiWithYourData.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Try `coresoi` with you own data","text":"Integrating coresoi package project partner data requires mapping function argument column partner’s database. computing ind_1 indicator, need two columns: stat_unit, companies win tenders publication_date. following template can integrate indicators available coresoi.","code":""},{"path":"https://core-forge.github.io/coresoi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Niccolo Salvini. Author, maintainer. Simone DelSarto. Author. Michela Gnaldi. Author.","code":""},{"path":"https://core-forge.github.io/coresoi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Salvini N, Sarto SD, Gnaldi M (2023). coresoi: measuring Corruption Risk Emergency. doi:10.5281/zenodo.8013258, https://core-forge.github.io/coresoi/index.html https://github.com/CORE-forge/coresoi/.","code":"@Manual{,   title = {coresoi: measuring Corruption Risk in Emergency},   author = {Niccolò Salvini and Simone Del Sarto and Michela Gnaldi},   year = {2023},   doi = {https://doi.org/10.5281/zenodo.8013258},   url = {https://core-forge.github.io/coresoi/index.html https://github.com/CORE-forge/coresoi/}, }"},{"path":"https://core-forge.github.io/coresoi/index.html","id":"coresoi-","dir":"","previous_headings":"","what":"Measuring Corruption Risk in Emergency","title":"Measuring Corruption Risk in Emergency","text":"coresoi product project CO.R.E.- Corruption risk indicators emergency, financed EU Commission, part Internal Police Security Fund (ISF-P) program. goal coresoi provide sandbox environment researchers anti-corruption analysts interact indicators corruption risk public procurement emergencies ’ve designed. also offer mock data extracted dati.anticorruzione aid analysis. hope platform promote greater transparency government, helping researchers anti-corruption analysts make efforts fighting corruption effective.","code":""},{"path":"https://core-forge.github.io/coresoi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Measuring Corruption Risk in Emergency","text":"can install development version coresoi GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"CORE-forge/coresoi\")"},{"path":"https://core-forge.github.io/coresoi/index.html","id":"core-ecosystem-","dir":"","previous_headings":"","what":"CORE ecosystem 🌏","title":"Measuring Corruption Risk in Emergency","text":"coresoi part project CO.R.E. - Corruption Risk indicators Emergency, financed EU Commission, part Internal Police Security Fund (ISF-P) program. project presented Department Political Sciences University Perugia (Italy) leader coordination Prof. Gnaldi (PI) funded total 514 thousand euros. international network involves Universitat Obierta Catalunya ( Spain ), Dublin City University ( Ireland), Oficina Antifrau de Catalunya ( Spain), Infonodes ( Italy), Transparency International ( Portugal), Villa Montesca Foundation ( Italy). CO.R.E. focuses assessing risk corruption public procurement emergency settings preventive point view. view achieving goal, central European agenda, CO.R.E. intends develop validate replicable procedure construction synthetic (composite) indicator (CI) risk corruption public procurement various emergency scenarios, can usefully employed national anti-corruption agencies, media citizens accountability purposes. development synthetic measure corruption risk involves several stages: selection data computation elementary indicators (.e. red flags) corruption risk; choice normalization, weighting aggregation schemes; multivariate analysis study data relational structure; sensitivity analysis resulting synthetic indicator check robustness. steps, coresoi provides support interested user analytical codes, users’ guides practical examples.","code":""},{"path":"https://core-forge.github.io/coresoi/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Measuring Corruption Risk in Emergency","text":"Please note core-soi project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate the elementary indicators on the provided data matrix — aggregate","title":"Aggregate the elementary indicators on the provided data matrix — aggregate","text":"aggregate aggregates set elementary indicators selected method computes composite according specified set weights.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate the elementary indicators on the provided data matrix — aggregate","text":"","code":"aggregate(data, method = \"linear\", w)"},{"path":"https://core-forge.github.io/coresoi/reference/aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate the elementary indicators on the provided data matrix — aggregate","text":"data data matrix set normalised elementary indicators (without missing values). method aggregation method. Possible choices: \"linear\" (default) \"non-linear\". See Details. w vector weights, returned get_weights().","code":""},{"path":"https://core-forge.github.io/coresoi/reference/aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate the elementary indicators on the provided data matrix — aggregate","text":"vector composite indicator values target unit data.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/aggregate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate the elementary indicators on the provided data matrix — aggregate","text":"choice aggregation method heavily depends degree compensability substitutability elementary indicators. compensatory approach requires use linear functions (e.g., linear combination elementary indicators), partially compensatory (non-compensatory) approach involves non-linear functions (e.g., multiplicative approach). first case, corresponds set method = \"linear\", composite indicator target unit \\(c\\) obtained weighted (according w) arithmetic mean \\(Q\\) elementary (normalised) indicators \\(I_{qc}\\): $$CI_c = \\sum_{q=1}^Q w_q I_{qc}$$ second case, using method = \"non-linear\", resulting composite indicator obtained weighted geometric mean elementary indicators: $$CI_c = \\prod_{q=1}^Q I_{qc}^{w_q}$$","code":""},{"path":"https://core-forge.github.io/coresoi/reference/check_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"simple wrapper to check if important columns are missing — check_columns","title":"simple wrapper to check if important columns are missing — check_columns","text":"simple wrapper check important columns missing","code":""},{"path":"https://core-forge.github.io/coresoi/reference/check_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simple wrapper to check if important columns are missing — check_columns","text":"","code":"check_columns(df, columns)"},{"path":"https://core-forge.github.io/coresoi/reference/composite_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a complete sensitivity analysis of the composite indicator — composite_sensitivity","title":"Perform a complete sensitivity analysis of the composite indicator — composite_sensitivity","text":"composite_sensitivity performs complete sensitivity analysis composite indicator, computing using possible combinations methodological choices -- normalisation, management missing values, weighting aggregation -- well evaluating contribution elementary indicator final composite, removing indicator time computation. Note: unique normalisation method considered within CO.R.E. project 'dichotomisation'. , sensitivity based choice threshold. See Details.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/composite_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a complete sensitivity analysis of the composite indicator — composite_sensitivity","text":"","code":"composite_sensitivity(   indicator_list,   cutoff = c(0.9, 0.95, 0.99, 0.995),   expert_weights = NULL,   ... )"},{"path":"https://core-forge.github.io/coresoi/reference/composite_sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a complete sensitivity analysis of the composite indicator — composite_sensitivity","text":"indicator_list list outputs indicator computable target unit (e.g., company contracting authority), returned ind_all(). cutoff vector thresholds normalising indicators (.e., dichotomisation). expert_weights user-provided expert weights (available moment sensitivity analysis). ... optional arguments mirt::mirt() function (getting IRT weights).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/composite_sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a complete sensitivity analysis of the composite indicator — composite_sensitivity","text":"list two versions (wide long) dataframe (sens_wide sens_long), includes, target unit, possible values composite indicator obtained combining methodological choices indicator removals. See Details.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/composite_sensitivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform a complete sensitivity analysis of the composite indicator — composite_sensitivity","text":"main function carrying sensitivity analysis composite indicator. requires list indicator outputs returned ind_all(). list given internal function create_indicator_matrix() obtaining data matrix elementary indicators. Thereafter, several steps sensitivity analysis performed, follows. Elementary indicators normalised 'dichotomisation' method, using several thresholds provided argument cutoff. Missing values elementary indicators () managed proposed methods, , replacing missing values '0' ('risk'), means logistic regression models (see internal function manage_missing()). Vectors weights obtained according three proposed ways, , equal weights, expert weights IRT weights (see get_weights()). last method can require much time, depends data hand, different every time according step 1 2. Moreover, weights provided experts, user can input set expert weights, using argument expert_weights. Composite indicator computation. target unit, composite indicator computed basis combination methodological choices (steps 1-3), hence \\(k \\times 2 \\times 3\\) combinations, \\(k\\) number normalisation thresholds (cutoff). addition, composite indicator computed removing elementary indicator time computation. Finally, given \\(Q\\) elementary indicators, composite indicator computed, target unit, \\(k \\times 2 \\times 3 \\times (Q+1)\\) times. Results returned two dataframes. wide version (sens_wide), target unit rows many columns number combinations, report computed composite. Specifically, first column target unit ID, whereas subsequent columns contain composite computed according different combinations (steps 1-4 ). names columns following structure: cx..w_abc.rrr, x cut-value normalising elementary indicators (e.g., 0.95); y label missing management method (0 1, see [manage_missing()); abc weighting scheme ('eq' equal weights; 'exp' expert weights; 'irt' IRT weights); rrr indication removed indicator ('' means indicator removed). example, column labelled c0.95.m0.w_eq.contains composite indicators computed using: 0.95 cut-value normalisation; method '0' missing management; equal weights (w_eq); without removal elementary indicators (). function directly returns also long version dataframe (sens_long), target unit repeated 'sensitivity combination'. , columns refer variables enter sensitivity analysis. particular, : aggregation_name: target unit ID ci: value composite cutoff: possible cut-values normalisation miss: '0' '1' weights: 'eq', 'exp' 'irt' ind_removed: 'none', '-ind1', '-ind2', ..., long version can useful specific analysis.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/composite_sensitivity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a complete sensitivity analysis of the composite indicator — composite_sensitivity","text":"","code":"if (FALSE) { if (interactive()) {   # sample of 100k contracts   set.seed(12345)   i <- sample(1:nrow(mock_data_core), size = 1e5)   mock_sample0 <- mock_data_core[sort(i), ]    # indicators for companies   mock_sample <- tidyr::unnest(mock_sample0, aggiudicatari, keep_empty = TRUE)   mock_sample_variants <- tidyr::unnest(mock_sample, varianti, keep_empty = TRUE)    out_companies <- ind_all(     data = mock_sample,     data_ind8 = mock_sample_variants,     emergency_name = \"coronavirus\",     target_unit = \"companies\"   )   out_sens <- composite_sensitivity(     indicator_list = out_companies,     cutoff = c(0.90, 0.95, 0.99),     TOL = 0.1 # argument for mirt::mirt function   )   View(out_sens$sens_wide)   View(out_sens$sens_long)    # regression and ANOVA on sensitivity output   datl <- out_sens1$sens_long   datl$ci100 <- 100 * datl$ci   datl$ind_removed2 <- factor(datl$ind_removed) %>%     relevel(ref = \"none\")   X <- model.matrix(ci100 ~ factor(cutoff) + factor(miss) + factor(weights) + ind_removed2,     data = datl   )   y <- na.omit(datl$ci100)   dat <- data.frame(y, X)   formula <- paste(names(dat)[-1], collapse = \"+\")   formula <- paste(\"y~0+\", formula)   mod <- lm(formula, data = dat)   summary(mod)   mod_anova <- anova(mod)   mod_anova    # graphical visualisation of the results   # median/mean of CI for each target unit ID   datw$medianCI <- apply(datw[, -c(1, 2)], MARGIN = 1, FUN = median)   datw$meanCI <- apply(datw[, -c(1, 2)], MARGIN = 1, FUN = mean)   datw <- datw %>%     dplyr::relocate(medianCI, .after = aggregation_name) %>%     dplyr::relocate(meanCI, .after = medianCI)   datw_no0 <- datw %>%     dplyr::filter(meanCI != 0)    # long data about the first 400 units   datl_no0 <- datl %>%     dplyr::filter(aggregation_name %in% datw_no0$aggregation_name[1:400]) %>%     dplyr::left_join(datw_no0 %>%       dplyr::select(aggregation_name, medianCI, meanCI)) %>%     dplyr::arrange(meanCI, aggregation_name)   aggr <- datl_no0$aggregation_name %>%     unique()   aggr <- data.frame(id = 1:length(aggr), aggregation_name = aggr)   datl_no0 <- datl_no0 %>%     dplyr::left_join(aggr)   boxplot(datl_no0$ci ~ datl_no0$id,     ylab = \"Composite indicator\",     xlab = \"Company index (1:400)\"   ) } }"},{"path":"https://core-forge.github.io/coresoi/reference/composite_sensitivity_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"composite_sensitivity_methods — composite_sensitivity_methods","title":"composite_sensitivity_methods — composite_sensitivity_methods","text":"composite_sensitivity_methods performs sensitivity analysis methodological choices computing composite: normalisation (cut-values), method managing missing values weighting scheme. internal function.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/composite_sensitivity_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"composite_sensitivity_methods — composite_sensitivity_methods","text":"","code":"composite_sensitivity_methods(   indicator_list,   cutoff,   expert_weights = NULL,   removed_ind = NULL,   ... )"},{"path":"https://core-forge.github.io/coresoi/reference/composite_sensitivity_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"composite_sensitivity_methods — composite_sensitivity_methods","text":"Perform sensitivity analysis (methods) composite indicator","code":""},{"path":"https://core-forge.github.io/coresoi/reference/compute_barnard.html","id":null,"dir":"Reference","previous_headings":"","what":"compute Barnard test https://en.wikipedia.org/wiki/Barnard%27s_test — compute_barnard","title":"compute Barnard test https://en.wikipedia.org/wiki/Barnard%27s_test — compute_barnard","text":"compute Barnard test pvalue estimate piped expression","code":""},{"path":"https://core-forge.github.io/coresoi/reference/compute_barnard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute Barnard test https://en.wikipedia.org/wiki/Barnard%27s_test — compute_barnard","text":"","code":"compute_barnard(a, b, c, d, method = \"boschloo\")"},{"path":"https://core-forge.github.io/coresoi/reference/compute_composite.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute composite indicator — compute_composite","title":"Compute composite indicator — compute_composite","text":"compute_composite generic function calculates composite indicators according specified normalisation, missing management, weighting aggregation methods.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/compute_composite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute composite indicator — compute_composite","text":"","code":"compute_composite(   indicator_list,   norm_method = \"binary\",   miss_method = 1,   weight_method = \"experts\",   aggr_method = \"linear\",   cutoff = 0.95,   expert_weights = NULL,   ... )"},{"path":"https://core-forge.github.io/coresoi/reference/compute_composite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute composite indicator — compute_composite","text":"indicator_list list outputs indicator computable target unit (e.g., company contracting authority), returned ind_all(). norm_method normalisation method (see normalise()). miss_method missing management method (see manage_missing()). weight_method weighting method (see get_weights()). aggr_method aggregation method (see aggregate()). cutoff threshold dichotomising indicators (norm_method = \"binary\"). expert_weights mean weights pool anticorruption experts express relative impact indicator composite (originally expressed scale 1 10) ... optional arguments mirt::mirt() function. See Details.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/compute_composite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute composite indicator — compute_composite","text":"indicator schema generate_indicator_schema()","code":""},{"path":"https://core-forge.github.io/coresoi/reference/compute_composite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute composite indicator — compute_composite","text":"","code":"if (FALSE) { if (interactive()) {   # sample of 100k contracts   set.seed(12345)   i <- sample(1:nrow(mock_data_core), size = 1e5)   mock_sample0 <- mock_data_core[sort(i), ]    # indicators for companies   mock_sample <- tidyr::unnest(mock_sample0, aggiudicatari, keep_empty = TRUE)   mock_sample_variants <- tidyr::unnest(mock_sample, varianti, keep_empty = TRUE)    out_companies <- ind_all(     data = mock_sample,     data_ind8 = mock_sample_variants,     emergency_name = \"coronavirus\",     target_unit = \"companies\"   )   composite_companies <- compute_composite(     indicator_list = out_companies,     norm_method = \"binary\",     miss_method = 0,     cutoff = 0.99,     weight_method = \"experts\",     aggr_method = \"linear\"   ) } }"},{"path":"https://core-forge.github.io/coresoi/reference/compute_fisher.html","id":null,"dir":"Reference","previous_headings":"","what":"compute Fisher-exact test https://en.wikipedia.org/wiki/Fisher%27s_exact_test — compute_fisher","title":"compute Fisher-exact test https://en.wikipedia.org/wiki/Fisher%27s_exact_test — compute_fisher","text":"compute fisher test pvalue estimate piped expression","code":""},{"path":"https://core-forge.github.io/coresoi/reference/compute_fisher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute Fisher-exact test https://en.wikipedia.org/wiki/Fisher%27s_exact_test — compute_fisher","text":"","code":"compute_fisher(a, b, c, d)"},{"path":"https://core-forge.github.io/coresoi/reference/compute_kolmogorov_smirnoff.html","id":null,"dir":"Reference","previous_headings":"","what":"compute Kolmogorov Smirnov test in dplyr https://it.wikipedia.org/wiki/Test_di_Kolmogorov-Smirnov — compute_kolmogorov_smirnoff","title":"compute Kolmogorov Smirnov test in dplyr https://it.wikipedia.org/wiki/Test_di_Kolmogorov-Smirnov — compute_kolmogorov_smirnoff","text":"compute Kolmogorov Smirnov test pvalue","code":""},{"path":"https://core-forge.github.io/coresoi/reference/compute_kolmogorov_smirnoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute Kolmogorov Smirnov test in dplyr https://it.wikipedia.org/wiki/Test_di_Kolmogorov-Smirnov — compute_kolmogorov_smirnoff","text":"","code":"compute_kolmogorov_smirnoff(data, var, group, alternative = \"less\")"},{"path":"https://core-forge.github.io/coresoi/reference/compute_prop_test.html","id":null,"dir":"Reference","previous_headings":"","what":"compute Z-test proportional — compute_prop_test","title":"compute Z-test proportional — compute_prop_test","text":"compute Z-test pvalue estimate piped expression","code":""},{"path":"https://core-forge.github.io/coresoi/reference/compute_prop_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute Z-test proportional — compute_prop_test","text":"","code":"compute_prop_test(a, b, c, d, correct = FALSE)"},{"path":"https://core-forge.github.io/coresoi/reference/compute_unpaired_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"compute unpaired t-test test — compute_unpaired_ttest","title":"compute unpaired t-test test — compute_unpaired_ttest","text":"compute unpaired t test","code":""},{"path":"https://core-forge.github.io/coresoi/reference/compute_unpaired_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute unpaired t-test test — compute_unpaired_ttest","text":"","code":"compute_unpaired_ttest(.data, var, group, alternative = \"less\", paired = FALSE)"},{"path":"https://core-forge.github.io/coresoi/reference/compute_wilcox.html","id":null,"dir":"Reference","previous_headings":"","what":"compute Wilcoxon-Mann-Whitney test in dplyr https://it.wikipedia.org/wiki/Test_di_Wilcoxon-Mann-Whitney — compute_wilcox","title":"compute Wilcoxon-Mann-Whitney test in dplyr https://it.wikipedia.org/wiki/Test_di_Wilcoxon-Mann-Whitney — compute_wilcox","text":"compute Wilcoxon-Mann-Whitney test pvalue","code":""},{"path":"https://core-forge.github.io/coresoi/reference/compute_wilcox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute Wilcoxon-Mann-Whitney test in dplyr https://it.wikipedia.org/wiki/Test_di_Wilcoxon-Mann-Whitney — compute_wilcox","text":"","code":"compute_wilcox(   data,   var,   group,   exact = TRUE,   alternative = \"greater\",   paired = FALSE )"},{"path":"https://core-forge.github.io/coresoi/reference/coresoi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"coresoi: Measuring Corruption Risk in Emergency — coresoi-package","title":"coresoi: Measuring Corruption Risk in Emergency — coresoi-package","text":"package calculate CORE red flags play data","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/coresoi-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"coresoi: Measuring Corruption Risk in Emergency — coresoi-package","text":"Maintainer: Niccolo Salvini niccolo.salvini27@gmail.com (ORCID) Authors: Simone DelSarto simone.delsarto@unipg.(ORCID) Michela Gnaldi michela.gnaldi@unipg.(ORCID)","code":""},{"path":"https://core-forge.github.io/coresoi/reference/create_indicator_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create matrix of elementary indicators — create_indicator_matrix","title":"Create matrix of elementary indicators — create_indicator_matrix","text":"create_indicator_matrix creates data matrix elementary indicators (row = target unit; columns = indicator values).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/create_indicator_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create matrix of elementary indicators — create_indicator_matrix","text":"","code":"create_indicator_matrix(out_list)"},{"path":"https://core-forge.github.io/coresoi/reference/create_indicator_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create matrix of elementary indicators — create_indicator_matrix","text":"out_list list outputs indicator computable target unit (e.g., company contracting authority), returned ind_all().","code":""},{"path":"https://core-forge.github.io/coresoi/reference/create_indicator_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create matrix of elementary indicators — create_indicator_matrix","text":"data matrix aggregation ID target units first column indicator values subsequent columns (according out_list).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/create_indicator_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create matrix of elementary indicators — create_indicator_matrix","text":"Target unit ID output out_list can different full join carried merging indicators building final data matrix.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/create_indicator_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create matrix of elementary indicators — create_indicator_matrix","text":"","code":"if (FALSE) { if (interactive()) {   # sample of 100k contracts   set.seed(12345)   i <- sample(1:nrow(mock_data_core), size = 1e5)   mock_sample0 <- mock_data_core[sort(i), ]    # indicators for companies   mock_sample <- tidyr::unnest(mock_sample0, aggiudicatari, keep_empty = TRUE)   mock_sample_variants <- tidyr::unnest(mock_sample, varianti, keep_empty = TRUE)    out_companies <- ind_all(     data = mock_sample,     data_ind8 = mock_sample_variants,     emergency_name = \"coronavirus\",     target_unit = \"companies\"   )   indicator_data_matrix <- create_indicator_matrix(out_companies) } }"},{"path":"https://core-forge.github.io/coresoi/reference/dimensionality_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensionality Check — dimensionality_check","title":"Dimensionality Check — dimensionality_check","text":"dimensionality_check performs dimensionality assessment set elementary indicators using either Item Response Theory (IRT) framework Factor Analysis (FA).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/dimensionality_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensionality Check — dimensionality_check","text":"","code":"dimensionality_check(   indicator_list,   dim_method = \"IRT\",   cutoff = 0.95,   missing = 0,   max_ndim = length(indicator_list),   nrep = 5,   seed = NULL,   arg_tech_list = NULL,   ... )"},{"path":"https://core-forge.github.io/coresoi/reference/dimensionality_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensionality Check — dimensionality_check","text":"indicator_list list outputs indicator computable target unit (e.g., company contracting authority), returned , example, ind_1(), ind_2(), etc. dim_method method dimensionality assessment, chosen \"IRT\" \"FA\". former selected, dimensionality elementary indicators evaluated IRT framework using mirt::mirt() function. hand, exploratory factor analysis used means function psych::fa(). See Details. cutoff threshold dichotomising indicators (see normalise()). missing method imputing missing values (see manage_missing()): missing = 0: missing values replaced '0' (risk); missing = 1: missing values imputed using logistic regression. max_ndim maximum number dimensions check IRT framework (greater number elementary indicators). nrep number replicates random initialisation algorithm fitting IRT models. seed seed number used estimation. Default 12345 arg_tech_list list containing lower level technical parameters estimation. May : NCYCLES maximum number EM MH-RM cycles; defaults 500 2000 MAXQUAD maximum number quadratures, can increase 4GB RAM PC; default 20000 theta_lim range integration grid dimension; default c(-6, 6). Note itemtype = 'ULL' log-normal distribution used range change c(.01, 6^2), second term square theta_lim input instead ... optional arguments mirt::mirt() (e.g., estimation algorithm, convergence threshold, etc.) psych::fa() (e.g., method factor extraction, rotation method, etc.).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/dimensionality_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensionality Check — dimensionality_check","text":"different objects according dim_method: dim_method = \"IRT\": list IRT models (returned mirt::mirt()) possible dimensional solution, one max_ndim dimensions; dim_method = \"FA\": best factorial solution (returned psych::fa()).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/dimensionality_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dimensionality Check — dimensionality_check","text":"function dimensionality evaluation set elementary indicators implemented follows. Firstly, deals dichotomised indicators (proposed CO.R.E.), without missing values. Consequently, carrying dimensionality assessment, user provide list indicators (see argument indicator_list) together two arguments dichotomisation (cutoff) missing management (missing). , dimensionality check performed according chosen method (dim_method). dim_method = \"IRT\", IRT framework considered (means mirt::mirt() function). case, first step, function evaluates model fitting Rasch model 2PL model (two-parameter logistic), two widely used IRT models binary data. evaluated unidimensional setting, order understand type model better fit data hand (using common penalised likelihood metrics, AIC, SABIC, BIC, etc.). second step, multidimensional models estimated incrementing number dimensions time, two onwards (max_ndim). given number dimensions, say \\(d\\), several estimates IRT model (.e., Rasch 2PL, according step 1) obtained data hand according different initialisations estimation algorithm: first initialisation deterministic, based observed data; others (according nrep) random, order completely explore likelihood function maximise. Finally 1 + nrep estimates IRT model \\(d\\) dimensions obtained largest value maximised likelihood saved list returned. Step 2 repeated starting \\(d = 2\\) \\(d =\\) max_ndim. function ends, list max_ndim IRT models returned, one potential number dimensions. Moreover, summary dimensionality check displayed, showing, \\(d\\), model fitting metrics best model \\(d\\) dimensions. summary helps selecting suitable dimensional solution. dim_method = \"FA\", exploratory factor analysis considered (using psych::fa() function). particular, order find suitable number factors extract, function computes eigenvalues correlation matrix among elementary indicators (computed using tetrachoric correlation, given binary nature indicators). , given \"eigenvalues > 1\" rule, suitable number factors retained used calling psych::fa(). plot eigenvalues number factors also displayed.","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/dimensionality_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensionality Check — dimensionality_check","text":"","code":"if (FALSE) { if (interactive()) {   # sample of 200k contracts   set.seed(456)   i <- sample(1:nrow(mock_data_core), size = 2e5)   mock_sample0 <- mock_data_core[sort(i), ]    # indicators for companies   mock_sample <- tidyr::unnest(mock_sample0, aggiudicatari, keep_empty = TRUE)   mock_sample_variants <- tidyr::unnest(mock_sample, varianti, keep_empty = TRUE)    out_companies <- ind_all(     data = mock_sample,     data_ind8 = mock_sample_variants,     emergency_name = \"coronavirus\",     target_unit = \"companies\"   )   out_dim <- dimensionality_check(     indicator_list = out_companies,     dim_method = \"IRT\",     max_ndim = 4,     cutoff = 0.95,     missing = 0,     nrep = 3,     TOL = 0.1,     verbose = TRUE,     method = \"QMCEM\"   ) } }"},{"path":"https://core-forge.github.io/coresoi/reference/emergency_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"get the emergency date from input string — emergency_dates","title":"get the emergency date from input string — emergency_dates","text":"gets outbreak starting date emergency name input string","code":""},{"path":"https://core-forge.github.io/coresoi/reference/emergency_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the emergency date from input string — emergency_dates","text":"","code":"emergency_dates(emergency_name)"},{"path":"https://core-forge.github.io/coresoi/reference/emergency_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the emergency date from input string — emergency_dates","text":"emergency_name emergency name character string","code":""},{"path":"https://core-forge.github.io/coresoi/reference/emergency_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the emergency date from input string — emergency_dates","text":"lubridate class dmy date.","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/emergency_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get the emergency date from input string — emergency_dates","text":"","code":"if (FALSE) { if (interactive()) {   emergency_dates(\"Coronavirus\")   emergency_dates(\"Codronavilus\") } }"},{"path":"https://core-forge.github.io/coresoi/reference/generate_indicator_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"generate indicator schema — generate_indicator_schema","title":"generate indicator schema — generate_indicator_schema","text":"generate indicator schema","code":""},{"path":"https://core-forge.github.io/coresoi/reference/generate_indicator_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate indicator schema — generate_indicator_schema","text":"","code":"generate_indicator_schema(   .data,   indicator_id,   emergency,   indicator_name,   missing_cols = c(\"codice_regione\", \"provincia_codice\", \"citta_codice\",     \"cf_amministrazione_appaltante\", \"codice_fiscale\"),   country_name = \"Italy\",   ... )"},{"path":"https://core-forge.github.io/coresoi/reference/get_associated_cpv_from_emergency.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the associated CPV code(s) from emergency name. — get_associated_cpv_from_emergency","title":"Get the associated CPV code(s) from emergency name. — get_associated_cpv_from_emergency","text":"emergency going impact contract. example, Coronavirus supposed impact predominantly contracts CPV 33 \"Medical equipments, pharmaceuticals personal care products\". employed set domain experts worked associating emergency set CPV division code (first two digits CPV code).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/get_associated_cpv_from_emergency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the associated CPV code(s) from emergency name. — get_associated_cpv_from_emergency","text":"","code":"get_associated_cpv_from_emergency(emergency_name)"},{"path":"https://core-forge.github.io/coresoi/reference/get_associated_cpv_from_emergency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the associated CPV code(s) from emergency name. — get_associated_cpv_from_emergency","text":"emergency_name string specifying name emergency consider. Examples include \"Coronavirus\" \"Terremoto Centro Italia 2016-2017\".","code":""},{"path":"https://core-forge.github.io/coresoi/reference/get_associated_cpv_from_emergency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the associated CPV code(s) from emergency name. — get_associated_cpv_from_emergency","text":"CPV division code(s) involved selected emergency.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/get_country_id_from_name.html","id":null,"dir":"Reference","previous_headings":"","what":"mapping from country name to id (this is used for frontend purposes) — get_country_id_from_name","title":"mapping from country name to id (this is used for frontend purposes) — get_country_id_from_name","text":"mapping country name id (used frontend purposes)","code":""},{"path":"https://core-forge.github.io/coresoi/reference/get_country_id_from_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mapping from country name to id (this is used for frontend purposes) — get_country_id_from_name","text":"","code":"get_country_id_from_name(country_name)"},{"path":"https://core-forge.github.io/coresoi/reference/get_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the set of weights for building the composite indicator — get_weights","title":"Get the set of weights for building the composite indicator — get_weights","text":"get_weights returns weights constructing composite indicator.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/get_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the set of weights for building the composite indicator — get_weights","text":"","code":"get_weights(data, method, expert_weights = NULL, ...)"},{"path":"https://core-forge.github.io/coresoi/reference/get_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the set of weights for building the composite indicator — get_weights","text":"data data matrix binary elementary indicators (without missing values). method method getting set weights. Possible choices : \"equal\", \"experts\" \"irt\". See Details. expert_weights user-provided expert weights (). ... optional arguments mirt::mirt() function. See Details.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/get_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the set of weights for building the composite indicator — get_weights","text":"vector weights.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/get_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the set of weights for building the composite indicator — get_weights","text":"function returns vector weights, whose dimension equal number elementary indicators data (say, \\(Q\\)). Three choices offered: \"equal\": elementary indicator receives weight, equal \\(1/Q\\); \"experts\": elementary indicator receives specific weight provided experts. user can provide weights provided /experts (argument expert_weights), otherwise weights provided pool experts used; \"irt\": elementary indicator receives specific weights provided IRT framework. Specifically, unidimensional 2PL IRT model estimated data mirt::mirt() function, possible additional arguments can provided (...), estimation algorithm, numerical optimiser, convergence threshold, etc. model fitted, weights computed rescaling estimated discrimination parameters (way sum 1). Note: moment, IRT weights can obtained elementary indicators binary.","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/get_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the set of weights for building the composite indicator — get_weights","text":"","code":"if (FALSE) { if (interactive()) {   # sample of 100k contracts   set.seed(12345)   i <- sample(1:nrow(mock_data_core), size = 1e5)   mock_sample0 <- mock_data_core[sort(i), ]    # indicators for companies   mock_sample <- tidyr::unnest(mock_sample0, aggiudicatari, keep_empty = TRUE)   mock_sample_variants <- tidyr::unnest(mock_sample, varianti, keep_empty = TRUE)    out_companies <- ind_all(     data = mock_sample,     data_ind8 = mock_sample_variants,     emergency_name = \"coronavirus\",     target_unit = \"companies\"   )   indicator_data_matrix <- create_indicator_matrix(out_companies)   w <- get_weights(indicator_data_matrix, method = \"equal\")   w   w <- get_weights(indicator_data_matrix, method = \"experts\")   w } }"},{"path":"https://core-forge.github.io/coresoi/reference/grab_cpv.html","id":null,"dir":"Reference","previous_headings":"","what":"grab cpv colname from dataframe class — grab_cpv","title":"grab cpv colname from dataframe class — grab_cpv","text":"grab cpv colname dataframe class","code":""},{"path":"https://core-forge.github.io/coresoi/reference/grab_cpv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"grab cpv colname from dataframe class — grab_cpv","text":"","code":"grab_cpv(data)"},{"path":"https://core-forge.github.io/coresoi/reference/ind_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Winning rate across the crisis indicator — ind_1","title":"Compute Winning rate across the crisis indicator — ind_1","text":"indicator focuses companies emergency outbreak win public contracts relevant economic market much frequently emergency.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_1.html","id":"motivation","dir":"Reference","previous_headings":"","what":"Motivation","title":"Compute Winning rate across the crisis indicator — ind_1","text":"red flag considers risk companies exceptionally increase competitive power emergency outbreak, terms proportion awarded contracts relevant economic market(s).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_1.html","id":"scoring-rule","dir":"Reference","previous_headings":"","what":"Scoring rule","title":"Compute Winning rate across the crisis indicator — ind_1","text":"computation procedure returns 1 - p-value involved test (high values indicator correspond high levels corruption risk). computing composite, dichotomised 1 statistical test significant, 0 otherwise (see normalise()).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_1.html","id":"main-target-unit","dir":"Reference","previous_headings":"","what":"Main target unit","title":"Compute Winning rate across the crisis indicator — ind_1","text":"indicator targets companies.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Winning rate across the crisis indicator — ind_1","text":"","code":"ind_1(data, publication_date, emergency_name, stat_unit, test_type, cpvs, ...)"},{"path":"https://core-forge.github.io/coresoi/reference/ind_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Winning rate across the crisis indicator — ind_1","text":"data dataframe containing data use computing indicator. publication_date name variable data containing publication date contract. emergency_name string specifying name emergency consider. Examples include \"Coronavirus\" \"Terremoto Centro Italia 2016-2017\". stat_unit name variable data containing target unit ID (case, company). test_type string specifying statistical test use computing indicator. Available options \"barnard\", \"fisher\", \"z-test\". cpvs character vector CPV divisions (first two digits CPV code) data filtered . Note: panel experts already chosen CPV divisions affected emergency. ... parameters pass generate_indicator_schema(), country_name (default: Italy).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Winning rate across the crisis indicator — ind_1","text":"indicator schema generate_indicator_schema().","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/ind_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Winning rate across the crisis indicator — ind_1","text":"","code":"if (FALSE) { if (interactive()) {   mock_data_core <- mock_data_core |>     tidyr::unnest(aggiudicatari, keep_empty = TRUE)   ind_1(     data = mock_data_core,     publication_date = data_pubblicazione,     stat_unit = codice_fiscale,     emergency_name = \"coronavirus\",     test_type = \"fisher\"   ) } }"},{"path":"https://core-forge.github.io/coresoi/reference/ind_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Awarded economic value across the crisis indicator — ind_2","title":"Compute Awarded economic value across the crisis indicator — ind_2","text":"indicator focuses companies emergency outbreak awarded public contracts relevant economic market higher economic value emergency occurred.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_2.html","id":"motivation","dir":"Reference","previous_headings":"","what":"Motivation","title":"Compute Awarded economic value across the crisis indicator — ind_2","text":"red flag considers risk companies exceptionally increase competitive power outbreak, terms economic value awarded contracts relevant economic market.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_2.html","id":"scoring-rule","dir":"Reference","previous_headings":"","what":"Scoring rule","title":"Compute Awarded economic value across the crisis indicator — ind_2","text":"computation procedure returns 1 - p-value involved test (high values indicator correspond high levels corruption risk). computing composite, dichotomised 1 statistical test significant, 0 otherwise (see normalise()).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_2.html","id":"main-target-unit","dir":"Reference","previous_headings":"","what":"Main target unit","title":"Compute Awarded economic value across the crisis indicator — ind_2","text":"indicator targets companies.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Awarded economic value across the crisis indicator — ind_2","text":"","code":"ind_2(   data,   contract_value,   publication_date,   emergency_name,   stat_unit,   test_type,   cpvs,   ... )"},{"path":"https://core-forge.github.io/coresoi/reference/ind_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Awarded economic value across the crisis indicator — ind_2","text":"data dataframe containing data use computing indicator. contract_value name variable data containing economic amount contract. publication_date name variable data containing publication date contract. emergency_name string specifying name emergency consider. Examples include \"Coronavirus\" \"Terremoto Centro Italia 2016-2017\". stat_unit name variable data containing target unit ID (case, company). test_type string specifying statistical test use computing indicator. Available options \"wilcoxon\" \"ks\" (Kolmogorov-Smirnov test). cpvs character vector CPV divisions (first two digits CPV code) data filtered . Note: panel experts already chosen CPV divisions affected emergency. ... parameters pass generate_indicator_schema(), country_name (default: Italy).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Awarded economic value across the crisis indicator — ind_2","text":"indicator schema generate_indicator_schema().","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/ind_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Awarded economic value across the crisis indicator — ind_2","text":"","code":"if (FALSE) { if (interactive()) {   mock_data_core <- mock_data_core |>     tidyr::unnest(aggiudicatari, keep_empty = TRUE)   ind_2(     data = mock_data_core,     contract_value = importo_lotto,     publication_date = data_pubblicazione,     stat_unit = codice_fiscale,     test_type = \"wilcoxon\",     emergency_name = \"coronavirus\"   ) } }"},{"path":"https://core-forge.github.io/coresoi/reference/ind_3.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Contract economic deviation across the crisis indicator — ind_3","title":"Compute Contract economic deviation across the crisis indicator — ind_3","text":"indicator reveals whether increase deviation contract actual execution economic value initial awarded value, reference contracts belonging relevant economic market.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_3.html","id":"motivation","dir":"Reference","previous_headings":"","what":"Motivation","title":"Compute Contract economic deviation across the crisis indicator — ind_3","text":"red flag considers risk companies/contracting authorities whose contracts undergo significant increase economic deviation ratio - .e., ratio actual amount paid awarded economic value - across crisis.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_3.html","id":"scoring-rule","dir":"Reference","previous_headings":"","what":"Scoring rule","title":"Compute Contract economic deviation across the crisis indicator — ind_3","text":"computation procedure returns 1 - p-value involved test (high values indicator correspond high levels corruption risk). computing composite, dichotomised 1 statistical test significant, 0 otherwise (see normalise()).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_3.html","id":"main-target-unit","dir":"Reference","previous_headings":"","what":"Main target unit","title":"Compute Contract economic deviation across the crisis indicator — ind_3","text":"indicator targets companies contracting authorities.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Contract economic deviation across the crisis indicator — ind_3","text":"","code":"ind_3(   data,   award_value,   sums_paid,   stat_unit,   emergency_name,   publication_date,   test_type,   cpvs,   ... )"},{"path":"https://core-forge.github.io/coresoi/reference/ind_3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Contract economic deviation across the crisis indicator — ind_3","text":"data dataframe containing data use computing indicator. award_value name variable data containing award value contract. sums_paid name variable data containing contract actual execution economic value (.e., amount paid contracting authority). stat_unit name variable data containing target unit ID (case, company contracting authority). emergency_name string specifying name emergency consider. Examples include \"Coronavirus\" \"Terremoto Centro Italia 2016-2017\". publication_date name variable data containing publication date contract. test_type string specifying statistical test use computing indicator. Available options \"wilcoxon\" \"ks\" (Kolmogorov-Smirnov test). cpvs character vector CPV divisions (first two digits CPV code) data filtered . Note: panel experts already chosen CPV divisions affected emergency. ... parameters pass generate_indicator_schema(), country_name (default: Italy).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Contract economic deviation across the crisis indicator — ind_3","text":"indicator schema generate_indicator_schema().","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/ind_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Contract economic deviation across the crisis indicator — ind_3","text":"","code":"if (FALSE) { if (interactive()) {   ind_3(     data = mock_data_core,     publication_date = data_pubblicazione,     award_value = importo_lotto,     sums_paid = importo_finale,     stat_unit = cf_amministrazione_appaltante,     emergency_name = \"coronavirus\",     test_type = \"wilcoxon\"   ) } }"},{"path":"https://core-forge.github.io/coresoi/reference/ind_4.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Contract length deviation across the crisis indicator — ind_4","title":"Compute Contract length deviation across the crisis indicator — ind_4","text":"indicator reveals whether increase deviation contract actual execution duration stated/expected duration.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_4.html","id":"motivation","dir":"Reference","previous_headings":"","what":"Motivation","title":"Compute Contract length deviation across the crisis indicator — ind_4","text":"red flag considers risk companies/contracting authorities whose contracts undergo significant increase length deviation ratio - .e., ratio contract actual execution duration expected duration - across crisis.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_4.html","id":"scoring-rule","dir":"Reference","previous_headings":"","what":"Scoring rule","title":"Compute Contract length deviation across the crisis indicator — ind_4","text":"computation procedure returns 1 - p-value involved test (high values indicator correspond high levels corruption risk). computing composite, dichotomised 1 statistical test significant, 0 otherwise (see normalise()).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_4.html","id":"main-target-unit","dir":"Reference","previous_headings":"","what":"Main target unit","title":"Compute Contract length deviation across the crisis indicator — ind_4","text":"indicator targets companies contracting authorities.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Contract length deviation across the crisis indicator — ind_4","text":"","code":"ind_4(   data,   exp_end,   eff_start,   eff_end,   stat_unit,   emergency_name,   publication_date,   test_type,   cpvs,   ... )"},{"path":"https://core-forge.github.io/coresoi/reference/ind_4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Contract length deviation across the crisis indicator — ind_4","text":"data dataframe containing data use computing indicator. exp_end name variable data containing expected end date contract, .e., contract completion date. eff_start name variable data containing effective start date contract. eff_end name variable data containing contract execution effective end date. stat_unit name variable data containing target unit ID (case, company contracting authority). emergency_name string specifying name emergency consider. Examples include \"Coronavirus\" \"Terremoto Centro Italia 2016-2017\". publication_date name variable data containing publication date contract. test_type string specifying statistical test use computing indicator. Available options \"wilcoxon\" \"ks\" (Kolmogorov-Smirnov test). cpvs character vector CPV divisions (first two digits CPV code) data filtered . Note: panel experts already chosen CPV divisions affected emergency. ... parameters pass generate_indicator_schema(), country_name (default: Italy).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Contract length deviation across the crisis indicator — ind_4","text":"indicator schema generate_indicator_schema().","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/ind_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Contract length deviation across the crisis indicator — ind_4","text":"","code":"if (FALSE) { if (interactive()) {   ind_4(     data = mock_data_core,     publication_date = data_pubblicazione,     exp_end = data_termine_contrattuale,     eff_end = data_effettiva_ultimazione,     eff_start = data_inizio_effettiva,     stat_unit = cf_amministrazione_appaltante,     emergency_name = \"coronavirus\"   ) } }"},{"path":"https://core-forge.github.io/coresoi/reference/ind_5.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Excess of concentration of the winners’ distribution indicator — ind_5","title":"Compute Excess of concentration of the winners’ distribution indicator — ind_5","text":"indicator compares concentration degree winners’ distribution contracting authority based contracts issued emergency respect occurred , reference contracts belonging pertinent market.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_5.html","id":"motivation","dir":"Reference","previous_headings":"","what":"Motivation","title":"Compute Excess of concentration of the winners’ distribution indicator — ind_5","text":"red flag considers risk contracting authorities showing increase concentration winners’ distribution across crisis, thus highlighting high degree awarding contracts increasingly small number firms.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_5.html","id":"scoring-rule","dir":"Reference","previous_headings":"","what":"Scoring rule","title":"Compute Excess of concentration of the winners’ distribution indicator — ind_5","text":"contracting authority, comparison concentration index (e.g., inverse Gini-normalised heterogeneity) - discretised five categories - outbreak performed. concentration category across emergency increases, indicator equal 1. Otherwise, equal 0.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_5.html","id":"main-target-unit","dir":"Reference","previous_headings":"","what":"Main target unit","title":"Compute Excess of concentration of the winners’ distribution indicator — ind_5","text":"indicator targets contracting authorities","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Excess of concentration of the winners’ distribution indicator — ind_5","text":"","code":"ind_5(data, stat_unit, publication_date, winners, emergency_name, cpvs, ...)"},{"path":"https://core-forge.github.io/coresoi/reference/ind_5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Excess of concentration of the winners’ distribution indicator — ind_5","text":"data dataframe containing data use computing indicator. stat_unit name variable data containing target unit ID (case, contracting authority). publication_date name variable data containing publication date contract. winners name variable data containing winning company ID contract. emergency_name string specifying name emergency consider. Examples include \"Coronavirus\" \"Terremoto Centro Italia 2016-2017\". cpvs character vector CPV divisions (first two digits CPV code) data filtered . Note: panel experts already chosen CPV divisions affected emergency. ... parameters pass generate_indicator_schema(), country_name (default: Italy).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Excess of concentration of the winners’ distribution indicator — ind_5","text":"indicator schema generate_indicator_schema().","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/ind_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Excess of concentration of the winners’ distribution indicator — ind_5","text":"","code":"if (FALSE) { if (interactive()) {   mock_data_core <- mock_data_core |>     tidyr::unnest(aggiudicatari, keep_empty = TRUE)   ind_5(     data = mock_data_core,     publication_date = data_pubblicazione,     stat_unit = cf_amministrazione_appaltante,     winners = codice_fiscale,     emergency_name = \"coronavirus\"   ) } }"},{"path":"https://core-forge.github.io/coresoi/reference/ind_6.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Award communication default across the crisis indicator — ind_6","title":"Compute Award communication default across the crisis indicator — ind_6","text":"indicator detects increase across emergency rate contracts contracting authorities communicated award details Anticorruption Authority, reference contracts belonging relevant economic market.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_6.html","id":"motivation","dir":"Reference","previous_headings":"","what":"Motivation","title":"Compute Award communication default across the crisis indicator — ind_6","text":"red flag considers risk contracting authorities increase communication default rate award information, hence worsening communication duties.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_6.html","id":"scoring-rule","dir":"Reference","previous_headings":"","what":"Scoring rule","title":"Compute Award communication default across the crisis indicator — ind_6","text":"computation procedure returns 1 - p-value involved test (high values indicator correspond high levels corruption risk). computing composite, dichotomised 1 statistical test significant, 0 otherwise (see normalise()).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_6.html","id":"main-target-unit","dir":"Reference","previous_headings":"","what":"Main target unit","title":"Compute Award communication default across the crisis indicator — ind_6","text":"indicator targets contracting authorities.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Award communication default across the crisis indicator — ind_6","text":"","code":"ind_6(   data,   publication_date,   emergency_name,   award_col,   stat_unit,   test_type,   cpvs,   ... )"},{"path":"https://core-forge.github.io/coresoi/reference/ind_6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Award communication default across the crisis indicator — ind_6","text":"data dataframe containing data use computing indicator. publication_date name variable data containing publication date contract. emergency_name string specifying name emergency consider. Examples include \"Coronavirus\" \"Terremoto Centro Italia 2016-2017\". award_col name variable datacontaining award notice ID contract. stat_unit name variable data containing target unit ID (case, contracting authority). test_type string specifying statistical test use computing indicator. Available options \"barnard\", \"fisher\", \"z-test\". cpvs character vector CPV divisions (first two digits CPV code) data filtered . Note: panel experts already chosen CPV divisions affected emergency. ... parameters pass generate_indicator_schema(), country_name (default: Italy).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_6.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Award communication default across the crisis indicator — ind_6","text":"indicator schema generate_indicator_schema().","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/ind_6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Award communication default across the crisis indicator — ind_6","text":"","code":"if (FALSE) { if (interactive()) {   ind_6(     data = mock_data_core,     publication_date = data_pubblicazione,     emergency_name = \"coronavirus\",     award_col = id_aggiudicazione,     stat_unit = cf_amministrazione_appaltante,     test_type = \"fisher\"   ) } }"},{"path":"https://core-forge.github.io/coresoi/reference/ind_7.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute One-shot opportunistic companies over the crisis indicator — ind_7","title":"Compute One-shot opportunistic companies over the crisis indicator — ind_7","text":"indicator focuses companies emergency outbreak win one public contracts, without winning years emergency outbreak (e.g., preceding five years), reference contracts belonging relevant economic market.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_7.html","id":"motivation","dir":"Reference","previous_headings":"","what":"Motivation","title":"Compute One-shot opportunistic companies over the crisis indicator — ind_7","text":"red flag considers risk companies show \"one-shot opportunistic behaviour\", , companies emergency outbreak awarded one public contracts shown competitive power previous year(s).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_7.html","id":"scoring-rule","dir":"Reference","previous_headings":"","what":"Scoring rule","title":"Compute One-shot opportunistic companies over the crisis indicator — ind_7","text":"company wins one contracts emergency outbreak won contracts years emergency outbreak, indicator equal 1; otherwise, equal 0.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_7.html","id":"main-target-unit","dir":"Reference","previous_headings":"","what":"Main target unit","title":"Compute One-shot opportunistic companies over the crisis indicator — ind_7","text":"indicator targets companies.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute One-shot opportunistic companies over the crisis indicator — ind_7","text":"","code":"ind_7(data, final_award_date, emergency_name, stat_unit, years_before, ...)"},{"path":"https://core-forge.github.io/coresoi/reference/ind_7.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute One-shot opportunistic companies over the crisis indicator — ind_7","text":"data dataframe containing data use computing indicator. final_award_date name variable data containing award notice date contract. emergency_name string specifying name emergency consider. Examples include \"Coronavirus\" \"Terremoto Centro Italia 2016-2017\". stat_unit name variable data containing target unit ID (case, company). years_before many years contract date need look presence awards specific company. ... parameters pass generate_indicator_schema(), country_name (default: Italy).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_7.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute One-shot opportunistic companies over the crisis indicator — ind_7","text":"indicator schema generate_indicator_schema().","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/ind_7.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute One-shot opportunistic companies over the crisis indicator — ind_7","text":"","code":"if (FALSE) { if (interactive()) {   mock_data_core <- mock_data_core |>     tidyr::unnest(aggiudicatari, keep_empty = TRUE)   ind_7(     data = mock_data_core,     final_award_date = data_aggiudicazione_definitiva,     stat_unit = codice_fiscale,     emergency_name = \"coronavirus\",     years_before = 1   ) } }"},{"path":"https://core-forge.github.io/coresoi/reference/ind_8.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Pre-existing contracts modified after the crisis indicator — ind_8","title":"Compute Pre-existing contracts modified after the crisis indicator — ind_8","text":"indicator reveals whether contracting authority/company least one pre-existing contract respect emergency outbreak (.e., call beginning emergency), modified emergency outbreak, reference relevant economic market.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_8.html","id":"motivation","dir":"Reference","previous_headings":"","what":"Motivation","title":"Compute Pre-existing contracts modified after the crisis indicator — ind_8","text":"red flag considers risk contracting authority/company existing contracts emergency outbreak subsequently modified variants emergency began; assessment excludes modifications made immediately thereafter, using parametric window (e.g., within following six months).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_8.html","id":"scoring-rule","dir":"Reference","previous_headings":"","what":"Scoring rule","title":"Compute Pre-existing contracts modified after the crisis indicator — ind_8","text":"given target unit, contract existing outbreak modified variants emergency outbreak (given parametric window, e.g., six months), indicator equal 1; otherwise, equal 0.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_8.html","id":"main-target-unit","dir":"Reference","previous_headings":"","what":"Main target unit","title":"Compute Pre-existing contracts modified after the crisis indicator — ind_8","text":"indicator targets companies contracting authorities.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_8.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Pre-existing contracts modified after the crisis indicator — ind_8","text":"","code":"ind_8(   data,   publication_date,   stat_unit,   variant_date,   emergency_name,   months_win = 6,   ... )"},{"path":"https://core-forge.github.io/coresoi/reference/ind_8.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Pre-existing contracts modified after the crisis indicator — ind_8","text":"data dataframe containing data use computing indicator. publication_date name variable data containing publication date contract. stat_unit name variable data containing target unit ID (case, company contracting authority). variant_date name variable data containing date occurrence contract variant. emergency_name string specifying name emergency consider. Examples include \"Coronavirus\" \"Terremoto Centro Italia 2016-2017\". months_win parametric time window (months) emergency outbreak. contract modifications made window considered. ... parameters pass generate_indicator_schema(), country_name (default: Italy).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_8.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Pre-existing contracts modified after the crisis indicator — ind_8","text":"indicator schema generate_indicator_schema().","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/ind_8.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Pre-existing contracts modified after the crisis indicator — ind_8","text":"","code":"if (FALSE) { if (interactive()) {   mock_data_core <- mock_data_core |>     tidyr::unnest(varianti, keep_empty = TRUE)   ind_8(     data = mock_data_core,     publication_date = data_pubblicazione,     stat_unit = cf_amministrazione_appaltante,     variant_date = data_approvazione_variante,     months_win = 6,     emergency_name = \"coronavirus\"   ) } }"},{"path":"https://core-forge.github.io/coresoi/reference/ind_9.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Lenghty contracts indicator — ind_9","title":"Compute Lenghty contracts indicator — ind_9","text":"indicator reveals whether (average) contract duration contracting authority/company significantly longer overall (average) contract duration, reference post-emergency contracts belonging relevant economic market.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_9.html","id":"motivation","dir":"Reference","previous_headings":"","what":"Motivation","title":"Compute Lenghty contracts indicator — ind_9","text":"red flag considers risk contracting authorities/companies post-emergency contracts whose excessive duration justified nature crisis, , contracts longer overall average duration contracts won emergency outbreak.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_9.html","id":"scoring-rule","dir":"Reference","previous_headings":"","what":"Scoring rule","title":"Compute Lenghty contracts indicator — ind_9","text":"computation procedure returns 1 - p-value involved test - Wilcoxon test case - (high values indicator correspond high levels corruption risk). computing composite, dichotomised 1 statistical test significant, 0 otherwise (see normalise()).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_9.html","id":"main-target-unit","dir":"Reference","previous_headings":"","what":"Main target unit","title":"Compute Lenghty contracts indicator — ind_9","text":"indicator targets companies contracting authorities.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_9.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Lenghty contracts indicator — ind_9","text":"","code":"ind_9(   data,   publication_date,   stat_unit,   eff_start,   eff_end,   emergency_name,   ... )"},{"path":"https://core-forge.github.io/coresoi/reference/ind_9.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Lenghty contracts indicator — ind_9","text":"data dataframe containing data use computing indicator. publication_date name variable data containing publication date contract. stat_unit name variable data containing target unit ID (case, company contracting authority). eff_start name variable data containing effective start date contract. eff_end name variable data containing contract execution effective end date. emergency_name string specifying name emergency consider. Examples include \"Coronavirus\" \"Terremoto Centro Italia 2016-2017\". ... parameters pass generate_indicator_schema(), country_name (default: Italy).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_9.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Lenghty contracts indicator — ind_9","text":"indicator schema generate_indicator_schema().","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/ind_9.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Lenghty contracts indicator — ind_9","text":"","code":"if (FALSE) { if (interactive()) {   ind_9(     data = mock_data_core,     publication_date = data_pubblicazione,     stat_unit = cf_amministrazione_appaltante,     eff_start = data_inizio_effettiva,     eff_end = data_effettiva_ultimazione,     emergency_name = \"coronavirus\"   ) } }"},{"path":"https://core-forge.github.io/coresoi/reference/ind_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute all the elementary indicators — ind_all","title":"Compute all the elementary indicators — ind_all","text":"ind_all computes elementary indicators, returning list (useful calling functions coresoi computing composite indicator).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute all the elementary indicators — ind_all","text":"","code":"ind_all(data, data_ind8, emergency_name, target_unit, id_location = NULL)"},{"path":"https://core-forge.github.io/coresoi/reference/ind_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute all the elementary indicators — ind_all","text":"data dataframe containing data use computing indicators. data_ind8 dataframe containing data use calculate indicator 8. See Details. emergency_name string specifying name emergency consider. Examples include \"Coronavirus\" \"Terremoto Centro Italia 2016-2017\". target_unit target unit indicators computed. can : \"companies\", \"contracting_authorities\" \"territory\". id_location name variable data data_ind8 containing geographic location interest (e.g., provinces, regions).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute all the elementary indicators — ind_all","text":"list outputs indicator computable selected target unit.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute all the elementary indicators — ind_all","text":"functions wrapper single functions computing elementary indicators. Given data want compute emergency, together target unit, function calls \"elementary\" function computing single red flags, according specified target. particular: data data_ind8 two versions dataframe, containing information single contracts, used computing elementary indicators. indicator 8 works contract variants, given potential \"1-n\" relationship (.e., \"one contract - variants\"), data_ind8 must longer (unnested) version data, includes information variants (hence, rows duplicated columns, except related variants). data, suggest include column \"nested\" data frame related variants, unnested placed data_ind8 (see example). Argument target_unit specifies target computing indicators. basis, specific functions called computing suitable set indicators. particular, target_unit = \"companies\", elementary indicators 1, 2, 3, 4, 7, 8 9 computed (calling related functions). hand, target_unit = \"contracting_authorities\" target_unit = \"territory\", elementary indicators 3, 4, 5, 6, 8 9 obtained. latter case, user specify (id_location) name variable data (data_ind8) relates territorial location interest (e.g., province code/name). NOTE: moment, works Italian data (BDNCP).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute all the elementary indicators — ind_all","text":"","code":"if (FALSE) { if (interactive()) {   # sample of 100k contracts   set.seed(12345)   i <- sample(1:nrow(mock_data_core), size = 1e5)   mock_sample0 <- mock_data_core[sort(i), ]    # indicators for companies   mock_sample <- tidyr::unnest(mock_sample0, aggiudicatari, keep_empty = TRUE)   mock_sample_variants <- tidyr::unnest(mock_sample, varianti, keep_empty = TRUE)    out_companies <- ind_all(     data = mock_sample,     data_ind8 = mock_sample_variants,     emergency_name = \"coronavirus\",     target_unit = \"companies\"   )    # indicators for contracting authorities   mock_sample_ca <- mock_sample0   mock_sample_ca_variants <- tidyr::unnest(mock_sample_ca, varianti, keep_empty = TRUE)   out_contrauth <- ind_all(     data = mock_sample_ca,     data_ind8 = mock_sample_ca_variants,     emergency_name = \"coronavirus\",     target_unit = \"contracting_authorities\"   ) } }"},{"path":"https://core-forge.github.io/coresoi/reference/ind_all_companies.html","id":null,"dir":"Reference","previous_headings":"","what":"Elementary indicators for companies — ind_all_companies","title":"Elementary indicators for companies — ind_all_companies","text":"ind_all_companies computes elementary indicators companies target unit, sequentially calling ind_1(), ind_2(), ind_3(), ind_4(), ind_7(), ind_8() ind_9(). internal function.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_all_companies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elementary indicators for companies — ind_all_companies","text":"","code":"ind_all_companies(data, data_ind8, emergency_name)"},{"path":"https://core-forge.github.io/coresoi/reference/ind_all_contr_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Elementary indicators for contracting authorities — ind_all_contr_auth","title":"Elementary indicators for contracting authorities — ind_all_contr_auth","text":"ind_all_contr_auth computes elementary indicators contracting authorities target unit, sequentially calling ind_3(), ind_4(), ind_5(), ind_6(), ind_8() ind_9(). internal function.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_all_contr_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elementary indicators for contracting authorities — ind_all_contr_auth","text":"","code":"ind_all_contr_auth(data, data_ind8, emergency_name)"},{"path":"https://core-forge.github.io/coresoi/reference/ind_all_geogr.html","id":null,"dir":"Reference","previous_headings":"","what":"Elementary indicators for a particular territory — ind_all_geogr","title":"Elementary indicators for a particular territory — ind_all_geogr","text":"ind_all_geogr computes elementary indicators geographic location (specified id_location), sequentially calling ind_3(), ind_4(), ind_5(), ind_6(), ind_8() ind_9(). internal function.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/ind_all_geogr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elementary indicators for a particular territory — ind_all_geogr","text":"","code":"ind_all_geogr(data, data_ind8, emergency_name, id_location)"},{"path":"https://core-forge.github.io/coresoi/reference/italian_aggregation_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"italian mapping from aggregation_id to aggregation_name — italian_aggregation_mapping","title":"italian mapping from aggregation_id to aggregation_name — italian_aggregation_mapping","text":"italian mapping aggregation_id aggregation_name","code":""},{"path":"https://core-forge.github.io/coresoi/reference/italian_aggregation_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"italian mapping from aggregation_id to aggregation_name — italian_aggregation_mapping","text":"","code":"italian_aggregation_mapping"},{"path":"https://core-forge.github.io/coresoi/reference/italian_aggregation_mapping.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"italian mapping from aggregation_id to aggregation_name — italian_aggregation_mapping","text":"object class list length 5.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/manage_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage missing values in elementary indicators — manage_missing","title":"Manage missing values in elementary indicators — manage_missing","text":"manage_missing deals imputation missing values elementary indicators. internal function.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/manage_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage missing values in elementary indicators — manage_missing","text":"","code":"manage_missing(data, missing = 0, verbose = TRUE, seed = 1234)"},{"path":"https://core-forge.github.io/coresoi/reference/manage_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage missing values in elementary indicators — manage_missing","text":"data data matrix elementary indicators (returned create_indicator_matrix()). missing method imputing missing values: missing = 0: missing values replaced '0' (risk); missing = 1: missing values imputed using logistic regression. See Details. verbose whether summary imputed values printed (missing = 1). seed seed random draw Bernoulli r.v. (missing = 1). See Details.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/manage_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage missing values in elementary indicators — manage_missing","text":"data matrix missing value.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/manage_missing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manage missing values in elementary indicators — manage_missing","text":"missing = 1, elementary indicators split two groups, according presence/absence (least one) missing values. Hence, set indicators without missing values (taken covariates) used 'predict' missing values indicators (seen dependent variable), using several logistic regression models, one indicator missing values. , models can predict probability combination observed indicators; , random draw Bernoulli distribution predicted probability parameter performed imputing '0' '1' indicator missing values.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/mock_data_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Italian Banca Dati Nazionali dei Contratti Pubblici (BDNCP) — mock_data_core","title":"Italian Banca Dati Nazionali dei Contratti Pubblici (BDNCP) — mock_data_core","text":"Data public contracts Italy published open format portal, handled Italian anticorruption authority (ANAC).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/mock_data_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Italian Banca Dati Nazionali dei Contratti Pubblici (BDNCP) — mock_data_core","text":"","code":"mock_data_core"},{"path":[]},{"path":"https://core-forge.github.io/coresoi/reference/mock_data_core.html","id":"mock-data-core","dir":"Reference","previous_headings":"","what":"mock_data_core","title":"Italian Banca Dati Nazionali dei Contratti Pubblici (BDNCP) — mock_data_core","text":"data frame approximately 300,000 contracts 39 variables: cig Contract identification code: code assigned Authority uniquely track tenders contracts nationwide assigned lot level. importo_lotto Economic amount (starting bid). oggetto_lotto Object (string). oggetto_principale_contratto Main contract object: works (\"LAVORI\") , services (\"SERVIZI\"), supplies (\"FORNITURE\"). cod_cpv Common Procurement Vocabulary (CPV) code. descrizione_cpv Common Procurement Vocabulary (CPV) description. flag_prevalente Dummy, indicating whether CPV prevailing luogo_istat Contract geographic localisation (ISTAT code). data_pubblicazione Publication date call tenders. cod_tipo_scelta_contraente Code referring procedure type choosing contractor. tipo_scelta_contraente Description procedure type selecting contractor. cod_modalita_realizzazione Code referring mode implementation contract. modalita_realizzazione Description mode implementation contract. cf_amministrazione_appaltante ID code (codice fiscale) contracting authorities issuing contract. denominazione_amministrazione_appaltante Name contracting authorities issuing contract. citta_codice_stazapp Contracting authority geographic location (ISTAT code). id_aggiudicazione Award notice ID. data_aggiudicazione_definitiva Award notice date. importo_aggiudicazione Award value. criterio_aggiudicazione Award criterion (economically advantageous bid, lowest price, etc.). numero_offerte_ammesse Number eligible bids. num_imprese_offerenti Number received bids. data_termine_contrattuale Expected end date. data_inizio_effettiva Actual start date. data_effettiva_ultimazione Actual end date. aggiudicatari Nested dataframe containing basic information awarded company(ies): codice_fiscale (Company ID) denominazione (company denomination). varianti Nested dataframe containing information modification(s) occured: id_variante(variant ID), data_approvazione_variante (variant date), cod_motivo_variante (variant reason code), motivo_variante (variant reason description). cod_regione Region ISTAT code (NUTS-2 level). nome_regione Region name (NUTS-2 level). cod_provincia Province ISTAT code (NUTS-3 level). nome_provincia Province name (NUTS-3 level). cod_comune Municipality ISTAT code (local administrative units). nome_comune Municipality name (local administrative units). rip_geo Geographic macro-level (NUTS-1 level). codice_nuts1_2021 NUTS-1 code. codice_nuts2_2021 NUTS-2 code. codice_nuts3_2021 NUTS-3 code.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/mock_data_core.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Italian Banca Dati Nazionali dei Contratti Pubblici (BDNCP) — mock_data_core","text":"https://dati.anticorruzione./opendata","code":""},{"path":"https://core-forge.github.io/coresoi/reference/mock_data_core.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Italian Banca Dati Nazionali dei Contratti Pubblici (BDNCP) — mock_data_core","text":"Nested dataframes (see aggiudicatari varianti) can unnested using function tidyr::unnest().","code":""},{"path":"https://core-forge.github.io/coresoi/reference/normalise.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise the elementary indicators — normalise","title":"Normalise the elementary indicators — normalise","text":"normalise normalises elementary indicators using suitable normalisation method (e.g., ranking, min-max, dichotomisation, etc.).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/normalise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise the elementary indicators — normalise","text":"","code":"normalise(data, method = \"binary\", cutoff = 0.95)"},{"path":"https://core-forge.github.io/coresoi/reference/normalise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalise the elementary indicators — normalise","text":"data data matrix elementary indicators (returned create_indicator_matrix()) method normalisation method, chosen among: \"binary\": elementary indicator dichotomised (0/1) using suitable threshold, specified argument cutoff. Specifically, normalised indicator equal 1 original indicator greater threshold, 0 otherwise; \"ranking\": elementary indicator normalised according ranking (see rank()); \"z-score\": elementary indicator standardised z-scores (see scale()). Let \\(x_{qc}\\) original value elementary indicator \\(q\\) target unit \\(c\\). , z-score obtained follows: $$I_{qc} = \\frac{x_{qc} - \\mu_q(x_{qc})}{\\sigma_q(x_{qc})}$$ \"minmax\": elementary indicator normalised using 'min-max' criterion: $$I_{qc} = \\frac{x_{qc} - min(x_{qc})}{max(x_{qc}) - min(x_{qc})}$$ \"distref\": elementary indicator normalised dividing maximum; \"catscale\": elementary indicator discretised five categories, according suitable sample quantiles. cutoff threshold dichotomising indicators (method = \"binary\").","code":""},{"path":"https://core-forge.github.io/coresoi/reference/normalise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalise the elementary indicators — normalise","text":"data matrix normalised indicators according chosen method.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/normalise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalise the elementary indicators — normalise","text":"CO.R.E. project, according proposed set elementary indicators, suitable normalisation method 'dichotomisation' (.e., method = \"binary\"), order make indicators binary. particular, given normalised elementary indicator equal 1, means target unit considered risk basis indicator. hand, target unit considered risk. fact, elementary indicators perform statistical test return, risk metric, one minus p-value test (hence, continuous scale, even bounded \\([0,1]\\)); others consider statistical tests, binary nature directly return target unit 'risk/risk' (0/1). order bring elementary indicators metric, , 'risk/risk' (0/1), group indicators rely statistical testing must normalised (.e., dichotomised) specifying suitable threshold significance involved tests. corresponds one minus threshold significance p-value test performed indicator. Example: cutoff = 0.95 means threshold significance p-values usual 0.05.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/normalise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalise the elementary indicators — normalise","text":"","code":"if (FALSE) { if (interactive()) {   # sample of 100k contracts   set.seed(12345)   i <- sample(1:nrow(mock_data_core), size = 1e5)   mock_sample0 <- mock_data_core[sort(i), ]    # indicators for companies   mock_sample <- tidyr::unnest(mock_sample0, aggiudicatari, keep_empty = TRUE)   mock_sample_variants <- tidyr::unnest(mock_sample, varianti, keep_empty = TRUE)    out_companies <- ind_all(     data = mock_sample,     data_ind8 = mock_sample_variants,     emergency_name = \"coronavirus\",     target_unit = \"companies\"   )   indicator_data_matrix <- create_indicator_matrix(out_companies)   indicator_data_matrix_norm <- normalise(data_matrix, method = \"binary\", cutoff = 0.99) } }"},{"path":"https://core-forge.github.io/coresoi/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://core-forge.github.io/coresoi/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://core-forge.github.io/coresoi/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://core-forge.github.io/coresoi/reference/test_set_1.html","id":null,"dir":"Reference","previous_headings":"","what":"switch test wrt statistical circumstances set 1 (indicators 1, ...) — test_set_1","title":"switch test wrt statistical circumstances set 1 (indicators 1, ...) — test_set_1","text":"switch test wrt statistical circumstances","code":""},{"path":"https://core-forge.github.io/coresoi/reference/test_set_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"switch test wrt statistical circumstances set 1 (indicators 1, ...) — test_set_1","text":"","code":"test_set_1(a, b, c, d, test_type)"},{"path":"https://core-forge.github.io/coresoi/reference/test_set_2.html","id":null,"dir":"Reference","previous_headings":"","what":"switch test wrt statistical circumstances set 2 (indicators 2,3,4 ...) — test_set_2","title":"switch test wrt statistical circumstances set 2 (indicators 2,3,4 ...) — test_set_2","text":"switch test wrt statistical circumstances","code":""},{"path":"https://core-forge.github.io/coresoi/reference/test_set_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"switch test wrt statistical circumstances set 2 (indicators 2,3,4 ...) — test_set_2","text":"","code":"test_set_2(data, var, group, test_type)"},{"path":"https://core-forge.github.io/coresoi/news/index.html","id":"coresoi-100","dir":"Changelog","previous_headings":"","what":"coresoi 1.0.0","title":"coresoi 1.0.0","text":"add composite main function complete documentation composite","code":""},{"path":"https://core-forge.github.io/coresoi/news/index.html","id":"coresoi-020","dir":"Changelog","previous_headings":"","what":"coresoi 0.2.0","title":"coresoi 0.2.0","text":"updates pkg documentation release first version composite indicator","code":""},{"path":"https://core-forge.github.io/coresoi/news/index.html","id":"coresoi-011","dir":"Changelog","previous_headings":"","what":"coresoi 0.1.1","title":"coresoi 0.1.1","text":"realesed feasible red flags: ind_1 ind_9","code":""},{"path":[]},{"path":"https://core-forge.github.io/coresoi/news/index.html","id":"core-soi-0-1-0","dir":"Changelog","previous_headings":"","what":"core-soi 0.0.0.9003","title":"coresoi 0.1.0","text":"addded indicator 2 .e. ind_2()+ docs","code":""},{"path":"https://core-forge.github.io/coresoi/news/index.html","id":"core-soi-0-1-0-1","dir":"Changelog","previous_headings":"","what":"core-soi 0.0.0.9002","title":"coresoi 0.1.0","text":"release firts indicator ind_11 “Distance award value sums paid”. release pkg docuemntation skeleton","code":""},{"path":"https://core-forge.github.io/coresoi/news/index.html","id":"core-soi-0-1-0-2","dir":"Changelog","previous_headings":"","what":"core-soi 0.0.0.9000","title":"coresoi 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
